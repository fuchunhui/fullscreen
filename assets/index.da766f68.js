class t extends HTMLElement{constructor(){super(),this.currentIndex=0,this.bindListeners()}bindListeners(){this.tabClick=this.tabClick.bind(this)}connectedCallback(){this.render(),this.addEventListener(),this.setCurrent(this.currentIndex)}render(){this.attachShadow({mode:"open"}).innerHTML='\n<div class="tab-list">\n<style>\n:host {\n  display: flex;\n  flex-direction: column;\n}\n.tab-nav {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: var(--tab-gap, 0px);\n  color: var(--tab-nav-color, #333333)\n}\n.tab-nav ::slotted(*) {\n  padding: 0 10px;\n  border-bottom: 2px solid transparent;\n  font-size: 14px;\n  user-select: none;\n  cursor: pointer;\n}\n.tab-nav ::slotted(.active) {\n  border-bottom-color: #4C84FF;\n}\n.tab-content ::slotted(*) {\n  display: none;\n}\n.tab-content ::slotted(.active) {\n  display: block;\n  padding: 5px;\n}\n</style>\n<div class="tab-nav">\n  <slot name="nav" class="nav-item"></slot>\n</div>\n<div class="tab-content">\n  <slot name="content" class="content-item"></slot>\n</div>\n</div>\n'}setCurrent(t){this.setTabActive(t,this.getNavList()),this.setTabActive(t,this.getContentList())}addEventListener(){if(!this.shadowRoot)return;const t=this.shadowRoot.querySelector(".nav-item");t&&t.addEventListener("click",this.tabClick)}tabClick(t){if(!t.target)return;const e=this.getNavList().indexOf(t.target);e!==this.currentIndex&&(this.currentIndex=e,this.setCurrent(e))}getElementList(t){if(!this.shadowRoot)return[];return this.shadowRoot.querySelector(t).assignedElements()}getNavList(){return this.getElementList(".nav-item")}getContentList(){return this.getElementList(".content-item")}setTabActive(t,e){e.forEach(((e,n)=>{n===t?e.classList.add("active"):e.classList.remove("active")}))}}customElements.define("tab-list",t),console.log("Hello World!");
